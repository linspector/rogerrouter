default:
  interruptible: true
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
  timeout: 3h

variables:
  GIT_SUBMODULE_STRATEGY: normal
  BUNDLE: "roger-dev.flatpak"

stages:
  - check
  - build

check-code-style:
  stage: check
  image: alpine:latest
  before_script:
    - apk update && apk add uncrustify bash python3
  script:
    - bash data/check-code-style

scan-build:
  image: registry.gitlab.com/tabos/rogerrouter/linux:v5
  stage: check
  script:
    - meson _build
    - ninja -C _build scan-build
    - bash -c 'if [[ -n "$(ls -A _build/meson-logs/scanbuild/)" ]]; then echo "Scan build log found, assuming defects exist"; exit 1; fi'
  allow_failure: true
  artifacts:
    when: on_failure
    paths:
      - _build/meson-logs/scanbuild

fedora-x86_64:
  image: registry.gitlab.com/tabos/rogerrouter/linux:v5
  stage: build
  script:
    - CC=clang meson _build
    - ninja -C _build
    - ninja -C _build test
  artifacts:
    paths:
      - "_build/meson-logs"
    when: on_failure

windows:
  stage: build
  tags:
    - shared-windows
    - windows
    - windows-1809
  allow_failure: true
  variables:
    PACMAN_OPTIONS: "--needed --noconfirm --noprogressbar --overwrite \\*"
  script:
    - curl.exe -L -O https://github.com/msys2/msys2-installer/releases/download/nightly-x86_64/msys2-base-x86_64-latest.sfx.exe
    - ./msys2-base-x86_64-latest.sfx.exe -y -oC:\
    - C:/msys64/usr/bin/bash -lc ' '                         # run and initialize MSYS2 for the first time
    - taskkill /F /FI "MODULES eq msys-2.0.dll"              #   dangling processes might be left from initialization 
    - C:/msys64/usr/bin/bash -lc 'pacman --noconfirm -Syuu'  # core system upgrade (in case any core packages are outdated)
    - taskkill /F /FI "MODULES eq msys-2.0.dll"              #   dangling processes might be left by core system upgrad
    - C:/msys64/usr/bin/bash -lc 'pacman --noconfirm -Syuu'  # full system upgrade update
    
    - $env:CHERE_INVOKING = 'yes'  # Preserve the current working directory
    - $env:MSYSTEM = 'MINGW64'     # Start a 64 bit Mingw environment
    - C:/msys64/usr/bin/bash -lc "build-aux/windows/build-msys.sh"
  artifacts:
    paths:
      - "C:/GitLab-Runner/builds/tabos/rogerrouter/rogerrouter/_build/meson-logs"
      - "C:/GitLab-Runner/builds/tabos/rogerrouter/rogerrouter/_build/build-aux/windows/*.exe"

